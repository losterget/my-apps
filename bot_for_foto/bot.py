import csv
import os
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
USER_DATA_FILE = "user_data.csv"
IMAGE_DIR = "images"  # –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
if not os.path.exists(USER_DATA_FILE):
    with open(USER_DATA_FILE, mode="w", newline="", encoding="utf-8") as file:
        writer = csv.writer(file)
        writer.writerow(["user_id", "state", "timestamp"])

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
class GameState:
    START = "start"
    LEGGINGS = "leggings"
    BRA = "bra"
    GYM_OR_HOME = "gym_or_home"
    SWIMSUIT = "swimsuit"
    NEW_SWIMSUIT = "new_swimsuit"  # –ù–æ–≤—ã–π —à–∞–≥ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫—É–ø–∞–ª—å–Ω–∏–∫–∞
    POSE_WINDOW = "pose_window"
    JEANS = "jeans"
    FINAL_STEP = "final_step"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user_state(user_id, state):
    with open(USER_DATA_FILE, mode="a", newline="", encoding="utf-8") as file:
        writer = csv.writer(file)
        writer.writerow([user_id, state, datetime.now()])

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def load_user_state(user_id):
    with open(USER_DATA_FILE, mode="r", newline="", encoding="utf-8") as file:
        reader = csv.reader(file)
        for row in reader:
            if row[0] == str(user_id):
                return {
                    "state": row[1],
                    "timestamp": datetime.fromisoformat(row[2])
                }
    return None

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    save_user_state(user_id, GameState.START)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("–ö—Ä–∞—Å–æ—Ç–∫–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ –≤–±", callback_data="start_game")]
    ])
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üòä –•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å?", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data

    # –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã
    if data == "start_game":
        save_user_state(user_id, GameState.LEGGINGS)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ–¥–µ–∂–¥—ã
        media_group = [
            open(f"{IMAGE_DIR}/dress.jpg", "rb"),
            open(f"{IMAGE_DIR}/shorts.jpg", "rb")
        ]
        await query.edit_message_text("–û—Ç–ª–∏—á–Ω–æ! –í–æ —á—Ç–æ –º–Ω–µ —Å–µ–≥–æ–¥–Ω—è –ø–æ–π—Ç–∏ –Ω–∞ –≤–±? ü§î")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–ü–ª–∞—Ç—å–µ", callback_data="dress"),
             InlineKeyboardButton("–®–æ—Ä—Ç–∏–∫–∏", callback_data="shorts")]
        ])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏ –æ–¥–µ–∂–¥—É:", reply_markup=keyboard)

    # –®–∞–≥ 1: –í—ã–±–æ—Ä –æ–¥–µ–∂–¥—ã
    elif data in ["dress", "shorts"]:
        save_user_state(user_id, GameState.LEGGINGS)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ª–æ—Å–∏–Ω
        media_group = [
            open(f"{IMAGE_DIR}/leggings_1.jpg", "rb"),
            open(f"{IMAGE_DIR}/leggings_2.jpg", "rb")
        ]
        await query.edit_message_text(f"–û—Ç–ª–∏—á–Ω–æ! –Ø –≤—ã–±—Ä–∞–ª–∞ {data}. –¢–µ–ø–µ—Ä—å —è –ø—Ä–∏—à–ª–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –∏ –∑–∞–∫–∞–∑–∞–ª–∞ –ª–æ—Å–∏–Ω—ã. –ö–∞–∫–∏–µ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤—è—Ç—Å—è?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–õ–æ—Å–∏–Ω—ã 1", callback_data="leggings_1"),
             InlineKeyboardButton("–õ–æ—Å–∏–Ω—ã 2", callback_data="leggings_2")]
        ])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏ –ª–æ—Å–∏–Ω—ã:", reply_markup=keyboard)

    # –®–∞–≥ 2: –í—ã–±–æ—Ä –ª–æ—Å–∏–Ω
    elif data.startswith("leggings"):
        save_user_state(user_id, GameState.BRA)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ª–∏—Ñ—á–∏–∫–æ–≤
        media_group = [
            open(f"{IMAGE_DIR}/bra_1.jpg", "rb"),
            open(f"{IMAGE_DIR}/bra_2.jpg", "rb")
        ]
        await query.edit_message_text("–î–∞, –º–Ω–µ —Ç–æ–∂–µ —ç—Ç–æ—Ç –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ! üòä –Ø –µ—â—ë –∑–∞–∫–∞–∑–∞–ª–∞ –ª–∏—Ñ—á–∏–∫. –ö–∞–∫–æ–π –∑–∞–±–µ—Ä–µ–º?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–õ–∏—Ñ—á–∏–∫ 1", callback_data="bra_1"),
             InlineKeyboardButton("–õ–∏—Ñ—á–∏–∫ 2", callback_data="bra_2")]
        ])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏ –ª–∏—Ñ—á–∏–∫:", reply_markup=keyboard)

    # –®–∞–≥ 3: –í—ã–±–æ—Ä –ª–∏—Ñ—á–∏–∫–∞
    elif data.startswith("bra"):
        save_user_state(user_id, GameState.GYM_OR_HOME)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–î–æ–º–æ–π –ø–æ–º–µ—Ä–∏—Ç—å", callback_data="home"),
             InlineKeyboardButton("–í —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª", callback_data="gym")]
        ])
        await query.edit_message_text("–ö–ª–∞—Å—Å–Ω—ã–π –≤—ã–±–æ—Ä! üëå –¢–µ–ø–µ—Ä—å —Ä–µ—à–∞–π: –∫—É–¥–∞ –ø–æ–π–¥–µ–º?")
        await query.message.reply_text("–ö—É–¥–∞ –ø–æ–π–¥–µ–º?", reply_markup=keyboard)

    # –®–∞–≥ 4: –í—ã–±–æ—Ä –º–µ–∂–¥—É –¥–æ–º–æ–º –∏ –∑–∞–ª–æ–º
    elif data == "home":
        save_user_state(user_id, GameState.SWIMSUIT)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∫—É–ø–∞–ª—å–Ω–∏–∫–æ–≤
        media_group = [
            open(f"{IMAGE_DIR}/swimsuit_1.jpg", "rb"),
            open(f"{IMAGE_DIR}/swimsuit_2.jpg", "rb")
        ]
        await query.edit_message_text("–î–æ–º–∞ —É—é—Ç–Ω–µ–µ! üòä –î–∞–≤–∞–π –ø–æ–º–µ—Ä–∏–º –∫—É–ø–∞–ª—å–Ω–∏–∫–∏.")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–ö—É–ø–∞–ª—å–Ω–∏–∫ 1", callback_data="swimsuit_1"),
             InlineKeyboardButton("–ö—É–ø–∞–ª—å–Ω–∏–∫ 2", callback_data="swimsuit_2")]
        ])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫:", reply_markup=keyboard)

    elif data == "gym":
        save_user_state(user_id, GameState.POSE_WINDOW)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–î–∞", callback_data="pose_window"),
             InlineKeyboardButton("–ù–µ—Ç", callback_data="end")]
        ])
        await query.edit_message_text("–í –∑–∞–ª–µ –≤—Å–µ–≥–¥–∞ –≤–µ—Å–µ–ª–æ! üí™")
        await query.message.reply_photo(photo=open(f"{IMAGE_DIR}/elevator.jpg", "rb"), caption="–§–æ—Ç–æ –≤ –ª–∏—Ñ—Ç–µ. –ü–æ–π—Ç–∏ –ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–∫–Ω–æ?")
        await query.message.reply_text("–ü–æ–π—Ç–∏ –ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–∫–Ω–æ?", reply_markup=keyboard)

    # –®–∞–≥ 5: –ü–µ—Ä–≤—ã–π –≤—ã–±–æ—Ä –∫—É–ø–∞–ª—å–Ω–∏–∫–∞
    elif data in ["swimsuit_1", "swimsuit_2"]:
        save_user_state(user_id, GameState.POSE_WINDOW)
        await query.edit_message_text("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –∫—É–ø–∞–ª—å–Ω–∏–∫–∞! üèñÔ∏è –¢–µ–ø–µ—Ä—å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–∞–ª!")
        await query.message.reply_photo(photo=open(f"{IMAGE_DIR}/gym_entrance.jpg", "rb"), caption="–ú—ã –ø—Ä–∏—à–ª–∏ –≤ –∑–∞–ª! üí™")
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–î–∞", callback_data="pose_window"),
             InlineKeyboardButton("–ù–µ—Ç", callback_data="end")]
        ])
        await query.message.reply_text("–ü–æ–π—Ç–∏ –ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–∫–Ω–æ?", reply_markup=keyboard)

    # –®–∞–≥ 6: –ü–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –æ–∫–Ω–µ
    elif data == "pose_window":
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–î–∞", callback_data="more_photos"),
             InlineKeyboardButton("–ù–µ—Ç", callback_data="end")]
        ])
        await query.edit_message_text("–ù–∞ –æ–∫–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∫—Ä—É—Ç–æ!")
        await query.message.reply_photo(photo=open(f"{IMAGE_DIR}/window_pose.jpg", "rb"), caption="–ù–∞ –æ–∫–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∫—Ä—É—Ç–æ!")
        await query.message.reply_text("–ü–æ–∫–∞–∂—É –µ—â—ë?", reply_markup=keyboard)

    elif data == "more_photos":
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–ö—É–ø–∞–ª—å–Ω–∏–∫", callback_data="new_swimsuit"),
             InlineKeyboardButton("–î–∂–∏–Ω—Å—ã", callback_data="jeans")]
        ])
        await query.edit_message_text("–ï—â—ë –æ–¥–Ω–∞ —Ñ–æ—Ç–∫–∞!")
        await query.message.reply_photo(photo=open(f"{IMAGE_DIR}/photo_2.jpg", "rb"), caption="–ï—â—ë –æ–¥–Ω–∞ —Ñ–æ—Ç–∫–∞!")
        await query.message.reply_text("–•–≤–∞—Ç–∏—Ç, –ø–æ–π–¥–µ–º –¥–æ–º–æ–π –º–µ—Ä–∏—Ç—å –∫—É–ø–∞–ª—å–Ω–∏–∫ –∏–ª–∏ –Ω–∞–¥–µ–Ω–µ–º –¥–∂–∏–Ω—Å—ã?", reply_markup=keyboard)

    # –ù–æ–≤—ã–π —à–∞–≥: –í—Ç–æ—Ä–æ–π –≤—ã–±–æ—Ä –∫—É–ø–∞–ª—å–Ω–∏–∫–∞ ("–õ–µ–≤—ã–π" –∏–ª–∏ "–ü—Ä–∞–≤—ã–π")
    elif data == "new_swimsuit":
        save_user_state(user_id, GameState.NEW_SWIMSUIT)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∫—É–ø–∞–ª—å–Ω–∏–∫–æ–≤
        media_group = [
            open(f"{IMAGE_DIR}/swimsuit_left.jpg", "rb"),
            open(f"{IMAGE_DIR}/swimsuit_right.jpg", "rb")
        ]
        await query.edit_message_text("–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –Ω–æ–≤—ã–π –∫—É–ø–∞–ª—å–Ω–∏–∫! –ö–∞–∫–æ–π —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–õ–µ–≤—ã–π", callback_data="swimsuit_left"),
             InlineKeyboardButton("–ü—Ä–∞–≤—ã–π", callback_data="swimsuit_right")]
        ])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫:", reply_markup=keyboard)

    elif data in ["swimsuit_left", "swimsuit_right"]:
        save_user_state(user_id, GameState.FINAL_STEP)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç–æ–ø–∏–∫–∞ –∏ –¥–∂–∏–Ω—Å–æ–≤
        media_group = [
            open(f"{IMAGE_DIR}/top.jpg", "rb"),
            open(f"{IMAGE_DIR}/jeans_with_top.jpg", "rb")
        ]
        await query.edit_message_text("–•–æ—Ä–æ—à–∏–π –∫—É–ø–∞–ª—å–Ω–∏–∫, —Ä–µ—à–∏–ª–∞ –Ω–∞–¥–µ—Ç—å –¥–ª—è —Ç–µ–±—è –µ—â—ë —ç—Ç–æ—Ç —Ç–æ–ø–∏–∫ –∏ –¥–∂–∏–Ω—Å—ã, –∫–∞–∫ —Ç–µ–±–µ?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–û–≥–æ–Ω—å", callback_data="final_like")]
        ])
        await query.message.reply_text("–ö–∞–∫ —Ç–µ–±–µ?", reply_markup=keyboard)

    elif data == "jeans":
        save_user_state(user_id, GameState.JEANS)
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–∂–∏–Ω—Å–æ–≤
        media_group = [
            open(f"{IMAGE_DIR}/jeans_1.jpg", "rb"),
            open(f"{IMAGE_DIR}/jeans_2.jpg", "rb")
        ]
        await query.edit_message_text("–î–∂–∏–Ω—Å—ã –≤—Å–µ–≥–¥–∞ –≤ –º–æ–¥–µ! üëñ –ö–∞–∫ —Ç–µ–±–µ –º–æ—è –ø–æ–ø–∫–∞?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–û—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è", callback_data="final_like"),
             InlineKeyboardButton("–ü–æ–∫–∞–∂–∏ –ø–æ–ø—É –≤ –ª–æ—Å–∏–Ω–∞—Ö", callback_data="show_leggings")]
        ])
        await query.message.reply_text("–ö–∞–∫ —Ç–µ–±–µ –º–æ—è –ø–æ–ø–∫–∞?", reply_markup=keyboard)

    elif data == "final_like":
        await query.edit_message_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è —Ç–∞–∫–∏–µ –æ–±–∑–æ—Ä—ã - –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –≤—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª https://t.me/swbfoto_bot"
        )

    elif data == "show_leggings":
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ø—ã –≤ –ª–æ—Å–∏–Ω–∞—Ö
        media_group = [
            open(f"{IMAGE_DIR}/leggings_pose.jpg", "rb"),
            open(f"{IMAGE_DIR}/leggings_pose_1.jpg", "rb")
        ]
        await query.edit_message_text("–ö–∞–∫ —Ç–µ–±–µ —Ç–∞–∫–æ–π –≤–∏–¥?")
        await query.message.reply_media_group(media=[InputMediaPhoto(photo) for photo in media_group])
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ", callback_data="final_like")]
        ])
        await query.message.reply_text("–ö–∞–∫ —Ç–µ–±–µ?", reply_markup=keyboard)

    elif data == "end":
        await query.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ –≤—Å—Ç—Ä–µ—á–∏! üòä")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    from config import TELEGRAM_BOT_TOKEN  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ config.py

    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_callback))

    application.run_polling()